data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data)
Mode(data$text_fct)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
table(data$text_fct)
data_imputed <- impute(data=data)
table(data_imputed$text_fct)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data)
round(20.2,2)
round(3.15,2)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=c("text_fct"),type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=c("text_fct"),type_fact="mode")
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
var_type <- var_type_identify(data=data,excludeVars=excludeVars)
#Identify numeric variables if is.null(numvarlist)
if (is.null(numvarlist)) {
numvarlist <- var_type[[1]]
}
numvarlist
i = "text_fct"
data[[i]] <- as.numeric(data[[i]])
summ <- list()
summ[[i]] <- max(data[[i]],na.rm=TRUE)
summ[[i]]
data[[i]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
factvarlist
factvarlist=c("text_fct")
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=c("text_fct"),type_fact="mode")
factvarlist
summ[[i]] <- Mode(levels(data[[i]])[data[[i]]],na.rm=TRUE)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
data_imputed <- impute(data=data)
round(20.2,0)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data)
mean(data$text_fct)
mean(data$text_fct,na.rm=T)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
397/3
399/3
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.double(c(rep(1,97),rep(20.2,150),rep(3.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
i
ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
max(data[[i]])
max(data[[i]],na.rm=T)
max(table(data[[i]]))
table(data[[i]])
which(data[[i]] == max(table(data[[i]]))
)
Model(data$text_fct)
Mode(data$text_fct)
density(data$text_fct)
density(data$text_fct,na.rm=T)
density(data$text_fct,na.rm=T)$data$text_fct,na.rm=T[which.max(density(data$text_fct,na.rm=T)$y)]
density(data$text_fct,na.rm=T)$x,na.rm=T[which.max(density(data$text_fct,na.rm=T)$y)]
density(data$text_fct,na.rm=T)$x[which.max(density(data$text_fct,na.rm=T)$y)]
table(data$text_fct)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
tabulate(data$text_fct)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
tabulate(data$text_fct)
ux <- unique(data$text_fct)
ux
ux[which.max(tabulate(match(x, ux)))]
ux[which.max(tabulate(match(data$text_fct, ux)))]
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(data$text_fct)
a = c(1,2,NA)
unique(a)
a
unique(data$text_fct)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.numeric(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
unique(data$text_fct)
unique(data$text_fct,na.rm=T)
ux <- unique(data$text_fct)
ux
ux[which.max(tabulate(match(data$text_fct, ux)))]
data$text_fct <- data$text_fct[!is.na(data$text_fct)]
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
i
summ[[i]] <- Mode(data[[i]])
summ[[i]]
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(levels(data[[i]])[data[[i]]])
summ[[i]]
levels(data[[i]]
)
levels(data[[i]])[data[[i]]]
summ[[i]]
data[[i]] <- as.factor(ifelse(is.na(data[[i]]),summ[[i]],levels(data[[i]])[data[[i]]]))
#' Imputation of missing values.
#'
#' @param data A dataframe.
#' @param excludeVars A vector of variables to be excluded form imputation.
#' @param numvarlist A vector of numeric variables to be imputed.
#' @param type_num Type of imputation for numeric variables to be used. Mean is Default method. Choices are min, max, mean, median and mode.
#' @param round Upto which decimal should imputed numeric values be rounded. Default rounds to whole number.
#' @param factvarlist A vector of factor variables to be imputed.
#' @param type_fact Type of imputation for factor variables to be used. Adding 'missing' level is Default method. Choices are mode and missing.
#' @return Input dataset with imputed values.
#' @examples
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "mean",round=0,factvarlist=c("rank"),type_fact = "mode")
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "median",round=2,factvarlist=c("rank"),type_fact="missing")
#'
impute <- function(data, excludeVars=NULL,numvarlist=NULL,type_num = "mean",round=0,factvarlist=NULL,type_fact = "missing") {
var_type <- var_type_identify(data=data,excludeVars=excludeVars)
#Identify numeric variables if is.null(numvarlist)
if (is.null(numvarlist)) {
numvarlist <- var_type[[1]]
}
if (!is.null(numvarlist)) {
for(i in numvarlist ){
data[[i]] <- as.numeric(data[[i]])
summ <- list()
if (tolower(type_num) == "mean") {
summ[[i]] <- round(mean(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "median") {
summ[[i]] <- round(median(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(data[[i]])
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "max") {
summ[[i]] <- max(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "min") {
summ[[i]] <- min(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only min, max, mean, median and mode allowed for type of numeric variables imputation")
}
}
#Identify character/categorical variables if is.null(factvarlist)
if (is.null(factvarlist)) {
factvarlist <- var_type[[2]]
}
if (!is.null(factvarlist)) {
for(i in factvarlist ){
summ <- list()
if (tolower(type_fact) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(levels(data[[i]])[data[[i]]])
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),summ[[i]],levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_fact) == "missing") {
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),"Missing",levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only 'mode' and 'missing' allowed for type of factor variables imputation")
}
}
return(data)
}
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
str(data)
data = data.frame(data)
str(data)
#' Imputation of missing values.
#'
#' @param data A dataframe.
#' @param excludeVars A vector of variables to be excluded form imputation.
#' @param numvarlist A vector of numeric variables to be imputed.
#' @param type_num Type of imputation for numeric variables to be used. Mean is Default method. Choices are min, max, mean, median and mode.
#' @param round Upto which decimal should imputed numeric values be rounded. Default rounds to whole number.
#' @param factvarlist A vector of factor variables to be imputed.
#' @param type_fact Type of imputation for factor variables to be used. Adding 'missing' level is Default method. Choices are mode and missing.
#' @return Input dataset with imputed values.
#' @examples
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "mean",round=0,factvarlist=c("rank"),type_fact = "mode")
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "median",round=2,factvarlist=c("rank"),type_fact="missing")
#'
impute <- function(data, excludeVars=NULL,numvarlist=NULL,type_num = "mean",round=0,factvarlist=NULL,type_fact = "missing") {
var_type <- var_type_identify(data=data,excludeVars=excludeVars)
#Identify numeric variables if is.null(numvarlist)
if (is.null(numvarlist)) {
numvarlist <- var_type[[1]]
}
if (!is.null(numvarlist)) {
for(i in numvarlist ){
data[[i]] <- as.numeric(data[[i]])
summ <- list()
if (tolower(type_num) == "mean") {
summ[[i]] <- round(mean(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "median") {
summ[[i]] <- round(median(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(data[[i]])
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "max") {
summ[[i]] <- max(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "min") {
summ[[i]] <- min(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only min, max, mean, median and mode allowed for type of numeric variables imputation")
}
}
#Identify character/categorical variables if is.null(factvarlist)
if (is.null(factvarlist)) {
factvarlist <- var_type[[2]]
}
if (!is.null(factvarlist)) {
for(i in factvarlist ){
summ <- list()
if (tolower(type_fact) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(levels(data[[i]])[data[[i]]])
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),summ[[i]],levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_fact) == "missing") {
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),"Missing",levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only 'mode' and 'missing' allowed for type of factor variables imputation")
}
}
return(data)
}
#Test
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data)
View(data_imputed)
#' Imputation of missing values.
#'
#' @param data A dataframe.
#' @param excludeVars A vector of variables to be excluded form imputation.
#' @param numvarlist A vector of numeric variables to be imputed.
#' @param type_num Type of imputation for numeric variables to be used. Mean is Default method. Choices are min, max, mean, median and mode.
#' @param round Upto which decimal should imputed numeric values be rounded. Default rounds to whole number.
#' @param factvarlist A vector of factor variables to be imputed.
#' @param type_fact Type of imputation for factor variables to be used. Adding 'missing' level is Default method. Choices are mode and missing.
#' @return Input dataset with imputed values.
#' @examples
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "mean",round=0,factvarlist=c("rank"),type_fact = "mode")
#' data <- impute(data=data,numvarlist=c("salary","yrs.service"),type_num = "median",round=2,factvarlist=c("rank"),type_fact="missing")
#'
impute <- function(data, excludeVars=NULL,numvarlist=NULL,type_num = "mean",round=0,factvarlist=NULL,type_fact = "missing") {
var_type <- var_type_identify(data=data,excludeVars=excludeVars)
#Identify numeric variables if is.null(numvarlist)
if (is.null(numvarlist)) {
numvarlist <- var_type[[1]]
}
if (!is.null(numvarlist)) {
for(i in numvarlist ){
data[[i]] <- as.numeric(data[[i]])
summ <- list()
if (tolower(type_num) == "mean") {
summ[[i]] <- round(mean(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "median") {
summ[[i]] <- round(median(data[[i]],na.rm=TRUE),round)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(data[[i]])
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "max") {
summ[[i]] <- max(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_num) == "min") {
summ[[i]] <- min(data[[i]],na.rm=TRUE)
data[[paste0(i,"_imputed")]] <- ifelse(is.na(data[[i]]),summ[[i]],data[[i]])
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only min, max, mean, median and mode allowed for type of numeric variables imputation")
}
}
#Identify character/categorical variables if is.null(factvarlist)
if (is.null(factvarlist)) {
factvarlist <- var_type[[2]]
}
if (!is.null(factvarlist)) {
for(i in factvarlist ){
summ <- list()
if (tolower(type_fact) == "mode") {
Mode <- function(x) {
x <- x[!is.na(x)]
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
summ[[i]] <- Mode(levels(data[[i]])[data[[i]]])
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),summ[[i]],levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else if (tolower(type_fact) == "missing") {
data[[paste0(i,"_imputed")]] <- as.factor(ifelse(is.na(data[[i]]),"Missing",levels(data[[i]])[data[[i]]]))
data[[paste0(i,"_impute_flag")]] <- ifelse(is.na(data[[i]]),"Yes","No")
}
else stop("ERROR: Only 'mode' and 'missing' allowed for type of factor variables imputation")
}
}
return(data)
}
#Test
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
#' Identify numeric/integer and categorical/character variables.
#'
#' @param data A dataframe.
#' @param excludeVars A vector of variables to be excluded.
#' @return List of numeric and categorical variables.
#' @examples
#' var_type <- var_type_identify(data=data,excludeVars=NULL)
#'
var_type_identify <- function (data,excludeVars=NULL) {
#Identify numeric variables
numVars <- NA
if (is.na(numVars[1])) {
for (i in 1:dim(data)[2]) {
yesnum <-  is.numeric(data[,i]) | is.integer(data[,i])
numVars <- append(numVars,ifelse(yesnum == "TRUE", colnames(data)[i],numVars),after = length(numVars))
}
}
numVars <- na.omit(numVars)
numVars <- numVars[!(numVars %in% excludeVars)]
#Identify character/categorical variables
categoricalVars <- NA
if (is.na(categoricalVars[1])) {
categoricalVars <- NA
for (i in 1:dim(data)[2]) {
yescat <-  is.character(data[,i]) | is.factor(data[,i])
categoricalVars <- append(categoricalVars,ifelse(yescat == "TRUE", colnames(data)[i],categoricalVars),after = length(categoricalVars))
}
}
categoricalVars <- na.omit(categoricalVars)
categoricalVars <- categoricalVars[!(categoricalVars %in% excludeVars)]
return(list(numVars,categoricalVars))
}
#Test
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
var_type <- var_type_identify(data=data,excludeVars=NULL)
data = readRDS("/stats/projects/all/R_Tools_Development/data/salaries_data.Rds")
data$text_fct <- as.factor(c(rep(1,97),rep(20.2,150),rep(300.15,150)))
data[1,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[2,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data[5,] <- c(NA,NA,NA,NA,NA,NA,0,NA)
data$salary = as.integer(data$salary)
data_imputed <- impute(data=data,numvarlist=NULL,type_num = "mode",round=2,factvarlist=NULL,type_fact="mode")
View(data_imputed)
View(data)
